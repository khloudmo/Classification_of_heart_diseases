# -*- coding: utf-8 -*-
"""Classification_of_heart_diseases.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/18qftdpUJQvBEcRtk6oyQ0CKd74wBsLBJ
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

try:
  HeartDiseaseData=pd.read_csv('/content/heart_2020_cleaned.csv')
  print(f'Data shape:{HeartDiseaseData}')
except BaseException as err:
  print(f'Error when reading csv:{err}')

print('head of data:\n{0}\ndtypes:\n\{1}\ninfo:{2}\nsum of nulls:\n{3} '
              .format(HeartDiseaseData.head(),HeartDiseaseData.dtypes,HeartDiseaseData.info(),HeartDiseaseData.isnull().sum()))

HeartDiseaseDataf=pd.DataFrame(HeartDiseaseData).dropna()
#check again size of data
print('new data frame shape:{}'.format(HeartDiseaseDataf.shape))

for column in HeartDiseaseDataf:
  #get the unique values for every column
  uniq_val=np.unique(HeartDiseaseDataf[column])
  #count the unique values for every column
  np_val=len(uniq_val)
  if np_val <15:
    print('the number of values for feature {} : {} --:{}'.format(column,np_val,uniq_val))
  else:
    print('the number of values for feature {} : {}'.format(column,np_val))
#HeartDiseaseDataf.head()

#NADP is: number of alcohol heart disease persons
def AlchocolDrinking():
  NADP=0
  NADP_not=0
  for Disease,Alcohol in zip(HeartDiseaseDataf['HeartDisease'],HeartDiseaseDataf['AlcoholDrinking']):
    if Disease==Alcohol=='Yes':
      NADP+=1
    else:
      NADP_not+=1
  NADPPercentage=round(NADP/HeartDiseaseDataf.shape[0],6)*100
  print("Alcohol Drinkers percentage that have heart disease to the data:{}%".format(NADPPercentage))

  print("number of alcohol drinkers that has heart disease", NADP)

  print("number of alcohol drinkers that don't have heart disease", NADP_not)

AlchocolDrinking()

def smoking():
  smoking=0
  smoking_not=0
  for Disease,Smoke in zip(HeartDiseaseDataf['HeartDisease'],HeartDiseaseDataf['Smoking']):
    if Disease==Smoke=='Yes':
      smoking+=1
    elif Disease==Smoke=='No':
      smoking_not+=1

  print('number of smokers that have heart disease',smoking)
  print('number of smokers that don\'t have heart disease',smoking_not)
smoking()

male=0
female=0
for gender in HeartDiseaseDataf['Sex']:
  if gender=='Male':
    male+=1
  elif gender=='Female':
    female+=1
print('number of males',male)
print('number of females',female)

def gender():
  male=0
  female=0
  for gender in HeartDiseaseDataf['Sex']:
    if gender=='Male':
      male+=1
    elif gender=='Female':
      female+=1

    print('number of males',male)
    print('number of females',female)

gender()

ageGroupsCount={}
for Disease,Age in zip(HeartDiseaseDataf['HeartDisease'],HeartDiseaseDataf['AgeCategory']):
  if Disease=='yes':
    ageGroupsCount[Age]=ageGroupsCount.get(Age,0)+1

  print('count of heart desease for every Agecategory:',sorted(ageGroupsCount.items()))

list=[i for i in HeartDiseaseDataf['PhysicalHealth']if i %2==0]
print(list)
print(len(list))

list=[i for i in HeartDiseaseDataf['PhysicalHealth']if i %2 !=0]
print(list)
print(len(list))

list=[i for i in HeartDiseaseDataf['SleepTime']if i  >=10]
print(list)
print(len(list))

list_y=[]
list_n=[]
for character in HeartDiseaseDataf['Smoking']:
  if character=='Yes':
    list_y.append(character)
  else:
    list_n.append(character)
print(len(list_y))
print(list_y)
print(len(list_n))
print(list_n)

class HeartDisease:
  def __init__(self):
    self.kidney_Disease=0
    self.not_kidney_Disease=0
    self.skin_cancer=0
    self.not_skin_cancer=0

  def kidneyDisease(self):
    for HeartDisease,KidneyDisease in zip(HeartDiseaseDataf['HeartDisease'],HeartDiseaseDataf['KidneyDisease']):
      if HeartDisease==KidneyDisease=='Yes':
        self.kidney_Disease+=1
      else:
        self.not_kidney_Disease+=1

    print('number of persons with kidney disease',self.kidney_Disease)
    print('number of persons without kidney disease',self.not_kidney_Disease)


  def skincancer(self):
    for HeartDisease, SkinCancer in zip(HeartDiseaseDataf['HeartDisease'],HeartDiseaseDataf['SkinCancer']):
      if HeartDisease==SkinCancer=='Yes':
        self.skin_cancer+=1
      else:
        self.not_skin_cancer+=1

    print('number of persons with skin cancer',self.skin_cancer)
    print('number of persons without skin cancer',self.not_skin_cancer)


heart=HeartDisease()

heart.kidneyDisease()

heart.skincancer()

HeartDiseaseDataf.head()

def drawPlots():
  plt.style.use('Solarize_Light2')
  plt.figure(figsize=(12,10))
  plt.title('Heart disease patients vs. non-heart disease patients')
  sns.countplot(x='HeartDisease',data=HeartDiseaseDataf)
  plt.show()

  plt.figure(figsize=(12,10))
  plt.title('Smoking persons  vs. Non-Smoking persons')
  sns.countplot(x='Smoking',data=HeartDiseaseDataf)
  plt.show

  plt.figure(figsize=(12,10))
  plt.title('Alcohol drinking persons  vs. Non-Alcohol drinking persons')
  sns.countplot(x='AlcoholDrinking',data=HeartDiseaseDataf)
  plt.show

  plt.figure(figsize=(12,10))
  plt.title('Male vs.Female persons datasets')
  sns.countplot(x='Sex',data=HeartDiseaseDataf)
  plt.show

  plt.figure(figsize=(12,10))
  plt.title('Infection of individuals in the sample with diabetes')
  sns.countplot(x='Diabetic',data=HeartDiseaseDataf)
  plt.show()
drawPlots()